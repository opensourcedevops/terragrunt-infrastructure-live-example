name: 'Terraform QA S3 PR Workflow'
on:
  pull_request:
    paths:
    - 'non-prod/us-east-1/qa/s3/**'
env:
  tf_working_dir: './non-prod/us-east-1/qa/s3'
  GIT_SSH_COMMAND: "echo '${{ secrets.GH_SSH_KEY }}' > id_rsa
    && ssh-keyscan github.com > known_hosts
    && chmod 600 id_rsa known_hosts
    && ssh -i ./id_rsa -o UserKnownHostsFile=./known_hosts"
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
jobs:
  terragrunt:
    name: QA S3
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ env.tf_working_dir }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 0.13.3
      - name: Setup Terragrunt
        uses: peter-murray/terragrunt-github-action@v1.0.0
        with:
          terragrunt_version: 0.26.7
      - name: Interact with Terragrunt
        id: version
        run: terragrunt --version
      - name: Terragrunt Format
        id: fmt
        run: terragrunt fmt
      - name: Terragrunt Validate
        id: validate
        run: terragrunt validate -no-color
      - name: Terragrunt Plan
        id: plan
        run: terragrunt plan -no-color
        continue-on-error: true
      - uses: actions/github-script@0.9.0
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style ðŸ–Œ\`${{ steps.fmt.outcome }}\`
            #### Terraform Validation ðŸ¤–${{ steps.validate.outputs.stdout }}
            #### Terraform Plan ðŸ“–\`${{ steps.plan.outcome }}\`
            
            <details><summary>Show Plan</summary>
            
            \`\`\`${process.env.PLAN}\`\`\`
            
            </details>
            
            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.tf_working_dir }}\`, Workflow: \`${{ github.workflow }}\`*`;
              
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })